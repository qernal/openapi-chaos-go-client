/*
Chaos

Central Management API - publicly exposed set of APIs for cloud resources

API version: 1.0.0
Contact: help@qernal.support
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_chaos_client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ListAuthTokens type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListAuthTokens{}

// ListAuthTokens List of auth tokens
type ListAuthTokens struct {
	Meta PaginationMeta `json:"meta"`
	Data []AuthTokenMeta `json:"data"`
}

type _ListAuthTokens ListAuthTokens

// NewListAuthTokens instantiates a new ListAuthTokens object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListAuthTokens(meta PaginationMeta, data []AuthTokenMeta) *ListAuthTokens {
	this := ListAuthTokens{}
	this.Meta = meta
	this.Data = data
	return &this
}

// NewListAuthTokensWithDefaults instantiates a new ListAuthTokens object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListAuthTokensWithDefaults() *ListAuthTokens {
	this := ListAuthTokens{}
	return &this
}

// GetMeta returns the Meta field value
func (o *ListAuthTokens) GetMeta() PaginationMeta {
	if o == nil {
		var ret PaginationMeta
		return ret
	}

	return o.Meta
}

// GetMetaOk returns a tuple with the Meta field value
// and a boolean to check if the value has been set.
func (o *ListAuthTokens) GetMetaOk() (*PaginationMeta, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Meta, true
}

// SetMeta sets field value
func (o *ListAuthTokens) SetMeta(v PaginationMeta) {
	o.Meta = v
}

// GetData returns the Data field value
func (o *ListAuthTokens) GetData() []AuthTokenMeta {
	if o == nil {
		var ret []AuthTokenMeta
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *ListAuthTokens) GetDataOk() ([]AuthTokenMeta, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data, true
}

// SetData sets field value
func (o *ListAuthTokens) SetData(v []AuthTokenMeta) {
	o.Data = v
}

func (o ListAuthTokens) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListAuthTokens) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["meta"] = o.Meta
	toSerialize["data"] = o.Data
	return toSerialize, nil
}

func (o *ListAuthTokens) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"meta",
		"data",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varListAuthTokens := _ListAuthTokens{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varListAuthTokens)

	if err != nil {
		return err
	}

	*o = ListAuthTokens(varListAuthTokens)

	return err
}

type NullableListAuthTokens struct {
	value *ListAuthTokens
	isSet bool
}

func (v NullableListAuthTokens) Get() *ListAuthTokens {
	return v.value
}

func (v *NullableListAuthTokens) Set(val *ListAuthTokens) {
	v.value = val
	v.isSet = true
}

func (v NullableListAuthTokens) IsSet() bool {
	return v.isSet
}

func (v *NullableListAuthTokens) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListAuthTokens(val *ListAuthTokens) *NullableListAuthTokens {
	return &NullableListAuthTokens{value: val, isSet: true}
}

func (v NullableListAuthTokens) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListAuthTokens) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


