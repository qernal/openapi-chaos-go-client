/*
Chaos

Central Management API - publicly exposed set of APIs for managing deployments

API version: 1.0.0
Contact: support@qernal.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_chaos_client

import (
	"encoding/json"
)

// checks if the BadRequestResponseFields type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BadRequestResponseFields{}

// BadRequestResponseFields struct for BadRequestResponseFields
type BadRequestResponseFields struct {
	Email *string `json:"email,omitempty"`
}

// NewBadRequestResponseFields instantiates a new BadRequestResponseFields object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBadRequestResponseFields() *BadRequestResponseFields {
	this := BadRequestResponseFields{}
	return &this
}

// NewBadRequestResponseFieldsWithDefaults instantiates a new BadRequestResponseFields object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBadRequestResponseFieldsWithDefaults() *BadRequestResponseFields {
	this := BadRequestResponseFields{}
	return &this
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *BadRequestResponseFields) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BadRequestResponseFields) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *BadRequestResponseFields) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *BadRequestResponseFields) SetEmail(v string) {
	o.Email = &v
}

func (o BadRequestResponseFields) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BadRequestResponseFields) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	return toSerialize, nil
}

type NullableBadRequestResponseFields struct {
	value *BadRequestResponseFields
	isSet bool
}

func (v NullableBadRequestResponseFields) Get() *BadRequestResponseFields {
	return v.value
}

func (v *NullableBadRequestResponseFields) Set(val *BadRequestResponseFields) {
	v.value = val
	v.isSet = true
}

func (v NullableBadRequestResponseFields) IsSet() bool {
	return v.isSet
}

func (v *NullableBadRequestResponseFields) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBadRequestResponseFields(val *BadRequestResponseFields) *NullableBadRequestResponseFields {
	return &NullableBadRequestResponseFields{value: val, isSet: true}
}

func (v NullableBadRequestResponseFields) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBadRequestResponseFields) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


