/*
Chaos

Central Management API - publicly exposed set of APIs for managing deployments

API version: 1.0.0
Contact: support@qernal.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_chaos_client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SecretMetaResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SecretMetaResponse{}

// SecretMetaResponse Secret metadata response
type SecretMetaResponse struct {
	// Secret name
	Name string `json:"name" validate:"regexp=^[A-Z_]+$"`
	Type SecretMetaType `json:"type"`
	Payload *SecretMetaResponsePayload `json:"payload,omitempty"`
	// Secret revision
	Revision int32 `json:"revision"`
	Date Date `json:"date"`
}

type _SecretMetaResponse SecretMetaResponse

// NewSecretMetaResponse instantiates a new SecretMetaResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecretMetaResponse(name string, type_ SecretMetaType, revision int32, date Date) *SecretMetaResponse {
	this := SecretMetaResponse{}
	this.Name = name
	this.Type = type_
	this.Revision = revision
	this.Date = date
	return &this
}

// NewSecretMetaResponseWithDefaults instantiates a new SecretMetaResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecretMetaResponseWithDefaults() *SecretMetaResponse {
	this := SecretMetaResponse{}
	return &this
}

// GetName returns the Name field value
func (o *SecretMetaResponse) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *SecretMetaResponse) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *SecretMetaResponse) SetName(v string) {
	o.Name = v
}

// GetType returns the Type field value
func (o *SecretMetaResponse) GetType() SecretMetaType {
	if o == nil {
		var ret SecretMetaType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *SecretMetaResponse) GetTypeOk() (*SecretMetaType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *SecretMetaResponse) SetType(v SecretMetaType) {
	o.Type = v
}

// GetPayload returns the Payload field value if set, zero value otherwise.
func (o *SecretMetaResponse) GetPayload() SecretMetaResponsePayload {
	if o == nil || IsNil(o.Payload) {
		var ret SecretMetaResponsePayload
		return ret
	}
	return *o.Payload
}

// GetPayloadOk returns a tuple with the Payload field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecretMetaResponse) GetPayloadOk() (*SecretMetaResponsePayload, bool) {
	if o == nil || IsNil(o.Payload) {
		return nil, false
	}
	return o.Payload, true
}

// HasPayload returns a boolean if a field has been set.
func (o *SecretMetaResponse) HasPayload() bool {
	if o != nil && !IsNil(o.Payload) {
		return true
	}

	return false
}

// SetPayload gets a reference to the given SecretMetaResponsePayload and assigns it to the Payload field.
func (o *SecretMetaResponse) SetPayload(v SecretMetaResponsePayload) {
	o.Payload = &v
}

// GetRevision returns the Revision field value
func (o *SecretMetaResponse) GetRevision() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Revision
}

// GetRevisionOk returns a tuple with the Revision field value
// and a boolean to check if the value has been set.
func (o *SecretMetaResponse) GetRevisionOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Revision, true
}

// SetRevision sets field value
func (o *SecretMetaResponse) SetRevision(v int32) {
	o.Revision = v
}

// GetDate returns the Date field value
func (o *SecretMetaResponse) GetDate() Date {
	if o == nil {
		var ret Date
		return ret
	}

	return o.Date
}

// GetDateOk returns a tuple with the Date field value
// and a boolean to check if the value has been set.
func (o *SecretMetaResponse) GetDateOk() (*Date, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Date, true
}

// SetDate sets field value
func (o *SecretMetaResponse) SetDate(v Date) {
	o.Date = v
}

func (o SecretMetaResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SecretMetaResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["type"] = o.Type
	if !IsNil(o.Payload) {
		toSerialize["payload"] = o.Payload
	}
	toSerialize["revision"] = o.Revision
	toSerialize["date"] = o.Date
	return toSerialize, nil
}

func (o *SecretMetaResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"type",
		"revision",
		"date",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSecretMetaResponse := _SecretMetaResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSecretMetaResponse)

	if err != nil {
		return err
	}

	*o = SecretMetaResponse(varSecretMetaResponse)

	return err
}

type NullableSecretMetaResponse struct {
	value *SecretMetaResponse
	isSet bool
}

func (v NullableSecretMetaResponse) Get() *SecretMetaResponse {
	return v.value
}

func (v *NullableSecretMetaResponse) Set(val *SecretMetaResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSecretMetaResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSecretMetaResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecretMetaResponse(val *SecretMetaResponse) *NullableSecretMetaResponse {
	return &NullableSecretMetaResponse{value: val, isSet: true}
}

func (v NullableSecretMetaResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecretMetaResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


