/*
Chaos

Central Management API - publicly exposed set of APIs for managing deployments

API version: 1.0.0
Contact: support@qernal.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_chaos_client

import (
	"encoding/json"
)

// checks if the MetricHttpAggregation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MetricHttpAggregation{}

// MetricHttpAggregation Metric http aggregation
type MetricHttpAggregation struct {
	HttpCodes *MetricHttpAggregationHttpCodes `json:"http_codes,omitempty"`
}

// NewMetricHttpAggregation instantiates a new MetricHttpAggregation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetricHttpAggregation() *MetricHttpAggregation {
	this := MetricHttpAggregation{}
	return &this
}

// NewMetricHttpAggregationWithDefaults instantiates a new MetricHttpAggregation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetricHttpAggregationWithDefaults() *MetricHttpAggregation {
	this := MetricHttpAggregation{}
	return &this
}

// GetHttpCodes returns the HttpCodes field value if set, zero value otherwise.
func (o *MetricHttpAggregation) GetHttpCodes() MetricHttpAggregationHttpCodes {
	if o == nil || IsNil(o.HttpCodes) {
		var ret MetricHttpAggregationHttpCodes
		return ret
	}
	return *o.HttpCodes
}

// GetHttpCodesOk returns a tuple with the HttpCodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricHttpAggregation) GetHttpCodesOk() (*MetricHttpAggregationHttpCodes, bool) {
	if o == nil || IsNil(o.HttpCodes) {
		return nil, false
	}
	return o.HttpCodes, true
}

// HasHttpCodes returns a boolean if a field has been set.
func (o *MetricHttpAggregation) HasHttpCodes() bool {
	if o != nil && !IsNil(o.HttpCodes) {
		return true
	}

	return false
}

// SetHttpCodes gets a reference to the given MetricHttpAggregationHttpCodes and assigns it to the HttpCodes field.
func (o *MetricHttpAggregation) SetHttpCodes(v MetricHttpAggregationHttpCodes) {
	o.HttpCodes = &v
}

func (o MetricHttpAggregation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MetricHttpAggregation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.HttpCodes) {
		toSerialize["http_codes"] = o.HttpCodes
	}
	return toSerialize, nil
}

type NullableMetricHttpAggregation struct {
	value *MetricHttpAggregation
	isSet bool
}

func (v NullableMetricHttpAggregation) Get() *MetricHttpAggregation {
	return v.value
}

func (v *NullableMetricHttpAggregation) Set(val *MetricHttpAggregation) {
	v.value = val
	v.isSet = true
}

func (v NullableMetricHttpAggregation) IsSet() bool {
	return v.isSet
}

func (v *NullableMetricHttpAggregation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetricHttpAggregation(val *MetricHttpAggregation) *NullableMetricHttpAggregation {
	return &NullableMetricHttpAggregation{value: val, isSet: true}
}

func (v NullableMetricHttpAggregation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetricHttpAggregation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


