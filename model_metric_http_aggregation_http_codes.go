/*
Chaos

Central Management API - publicly exposed set of APIs for cloud resources

API version: 1.0.0
Contact: help@qernal.support
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_chaos_client

import (
	"encoding/json"
)

// checks if the MetricHttpAggregationHttpCodes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MetricHttpAggregationHttpCodes{}

// MetricHttpAggregationHttpCodes HTTP status code aggregation
type MetricHttpAggregationHttpCodes struct {
	// Array of unique http status codes
	Buckets []MetricHttpAggregationHttpCodesBucketsInner `json:"buckets,omitempty"`
	// Upper bound of error in document count
	DocCountErrorUpperBound *int32 `json:"doc_count_error_upper_bound,omitempty"`
	// Sum of other document counts
	SumOtherDocCount *int32 `json:"sum_other_doc_count,omitempty"`
}

// NewMetricHttpAggregationHttpCodes instantiates a new MetricHttpAggregationHttpCodes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetricHttpAggregationHttpCodes() *MetricHttpAggregationHttpCodes {
	this := MetricHttpAggregationHttpCodes{}
	return &this
}

// NewMetricHttpAggregationHttpCodesWithDefaults instantiates a new MetricHttpAggregationHttpCodes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetricHttpAggregationHttpCodesWithDefaults() *MetricHttpAggregationHttpCodes {
	this := MetricHttpAggregationHttpCodes{}
	return &this
}

// GetBuckets returns the Buckets field value if set, zero value otherwise.
func (o *MetricHttpAggregationHttpCodes) GetBuckets() []MetricHttpAggregationHttpCodesBucketsInner {
	if o == nil || IsNil(o.Buckets) {
		var ret []MetricHttpAggregationHttpCodesBucketsInner
		return ret
	}
	return o.Buckets
}

// GetBucketsOk returns a tuple with the Buckets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricHttpAggregationHttpCodes) GetBucketsOk() ([]MetricHttpAggregationHttpCodesBucketsInner, bool) {
	if o == nil || IsNil(o.Buckets) {
		return nil, false
	}
	return o.Buckets, true
}

// HasBuckets returns a boolean if a field has been set.
func (o *MetricHttpAggregationHttpCodes) HasBuckets() bool {
	if o != nil && !IsNil(o.Buckets) {
		return true
	}

	return false
}

// SetBuckets gets a reference to the given []MetricHttpAggregationHttpCodesBucketsInner and assigns it to the Buckets field.
func (o *MetricHttpAggregationHttpCodes) SetBuckets(v []MetricHttpAggregationHttpCodesBucketsInner) {
	o.Buckets = v
}

// GetDocCountErrorUpperBound returns the DocCountErrorUpperBound field value if set, zero value otherwise.
func (o *MetricHttpAggregationHttpCodes) GetDocCountErrorUpperBound() int32 {
	if o == nil || IsNil(o.DocCountErrorUpperBound) {
		var ret int32
		return ret
	}
	return *o.DocCountErrorUpperBound
}

// GetDocCountErrorUpperBoundOk returns a tuple with the DocCountErrorUpperBound field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricHttpAggregationHttpCodes) GetDocCountErrorUpperBoundOk() (*int32, bool) {
	if o == nil || IsNil(o.DocCountErrorUpperBound) {
		return nil, false
	}
	return o.DocCountErrorUpperBound, true
}

// HasDocCountErrorUpperBound returns a boolean if a field has been set.
func (o *MetricHttpAggregationHttpCodes) HasDocCountErrorUpperBound() bool {
	if o != nil && !IsNil(o.DocCountErrorUpperBound) {
		return true
	}

	return false
}

// SetDocCountErrorUpperBound gets a reference to the given int32 and assigns it to the DocCountErrorUpperBound field.
func (o *MetricHttpAggregationHttpCodes) SetDocCountErrorUpperBound(v int32) {
	o.DocCountErrorUpperBound = &v
}

// GetSumOtherDocCount returns the SumOtherDocCount field value if set, zero value otherwise.
func (o *MetricHttpAggregationHttpCodes) GetSumOtherDocCount() int32 {
	if o == nil || IsNil(o.SumOtherDocCount) {
		var ret int32
		return ret
	}
	return *o.SumOtherDocCount
}

// GetSumOtherDocCountOk returns a tuple with the SumOtherDocCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricHttpAggregationHttpCodes) GetSumOtherDocCountOk() (*int32, bool) {
	if o == nil || IsNil(o.SumOtherDocCount) {
		return nil, false
	}
	return o.SumOtherDocCount, true
}

// HasSumOtherDocCount returns a boolean if a field has been set.
func (o *MetricHttpAggregationHttpCodes) HasSumOtherDocCount() bool {
	if o != nil && !IsNil(o.SumOtherDocCount) {
		return true
	}

	return false
}

// SetSumOtherDocCount gets a reference to the given int32 and assigns it to the SumOtherDocCount field.
func (o *MetricHttpAggregationHttpCodes) SetSumOtherDocCount(v int32) {
	o.SumOtherDocCount = &v
}

func (o MetricHttpAggregationHttpCodes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MetricHttpAggregationHttpCodes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Buckets) {
		toSerialize["buckets"] = o.Buckets
	}
	if !IsNil(o.DocCountErrorUpperBound) {
		toSerialize["doc_count_error_upper_bound"] = o.DocCountErrorUpperBound
	}
	if !IsNil(o.SumOtherDocCount) {
		toSerialize["sum_other_doc_count"] = o.SumOtherDocCount
	}
	return toSerialize, nil
}

type NullableMetricHttpAggregationHttpCodes struct {
	value *MetricHttpAggregationHttpCodes
	isSet bool
}

func (v NullableMetricHttpAggregationHttpCodes) Get() *MetricHttpAggregationHttpCodes {
	return v.value
}

func (v *NullableMetricHttpAggregationHttpCodes) Set(val *MetricHttpAggregationHttpCodes) {
	v.value = val
	v.isSet = true
}

func (v NullableMetricHttpAggregationHttpCodes) IsSet() bool {
	return v.isSet
}

func (v *NullableMetricHttpAggregationHttpCodes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetricHttpAggregationHttpCodes(val *MetricHttpAggregationHttpCodes) *NullableMetricHttpAggregationHttpCodes {
	return &NullableMetricHttpAggregationHttpCodes{value: val, isSet: true}
}

func (v NullableMetricHttpAggregationHttpCodes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetricHttpAggregationHttpCodes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


