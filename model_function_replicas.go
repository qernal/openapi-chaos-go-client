/*
Chaos

Central Management API - publicly exposed set of APIs for cloud resources

API version: 1.0.0
Contact: help@qernal.support
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_chaos_client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the FunctionReplicas type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FunctionReplicas{}

// FunctionReplicas Balancing logic
type FunctionReplicas struct {
	// Minimum number of replicas to have
	Min int32 `json:"min"`
	// Maximum number of replicas to have
	Max int32 `json:"max"`
	Affinity FunctionReplicasAffinity `json:"affinity"`
}

type _FunctionReplicas FunctionReplicas

// NewFunctionReplicas instantiates a new FunctionReplicas object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFunctionReplicas(min int32, max int32, affinity FunctionReplicasAffinity) *FunctionReplicas {
	this := FunctionReplicas{}
	this.Min = min
	this.Max = max
	this.Affinity = affinity
	return &this
}

// NewFunctionReplicasWithDefaults instantiates a new FunctionReplicas object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFunctionReplicasWithDefaults() *FunctionReplicas {
	this := FunctionReplicas{}
	return &this
}

// GetMin returns the Min field value
func (o *FunctionReplicas) GetMin() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Min
}

// GetMinOk returns a tuple with the Min field value
// and a boolean to check if the value has been set.
func (o *FunctionReplicas) GetMinOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Min, true
}

// SetMin sets field value
func (o *FunctionReplicas) SetMin(v int32) {
	o.Min = v
}

// GetMax returns the Max field value
func (o *FunctionReplicas) GetMax() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Max
}

// GetMaxOk returns a tuple with the Max field value
// and a boolean to check if the value has been set.
func (o *FunctionReplicas) GetMaxOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Max, true
}

// SetMax sets field value
func (o *FunctionReplicas) SetMax(v int32) {
	o.Max = v
}

// GetAffinity returns the Affinity field value
func (o *FunctionReplicas) GetAffinity() FunctionReplicasAffinity {
	if o == nil {
		var ret FunctionReplicasAffinity
		return ret
	}

	return o.Affinity
}

// GetAffinityOk returns a tuple with the Affinity field value
// and a boolean to check if the value has been set.
func (o *FunctionReplicas) GetAffinityOk() (*FunctionReplicasAffinity, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Affinity, true
}

// SetAffinity sets field value
func (o *FunctionReplicas) SetAffinity(v FunctionReplicasAffinity) {
	o.Affinity = v
}

func (o FunctionReplicas) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FunctionReplicas) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["min"] = o.Min
	toSerialize["max"] = o.Max
	toSerialize["affinity"] = o.Affinity
	return toSerialize, nil
}

func (o *FunctionReplicas) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"min",
		"max",
		"affinity",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varFunctionReplicas := _FunctionReplicas{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varFunctionReplicas)

	if err != nil {
		return err
	}

	*o = FunctionReplicas(varFunctionReplicas)

	return err
}

type NullableFunctionReplicas struct {
	value *FunctionReplicas
	isSet bool
}

func (v NullableFunctionReplicas) Get() *FunctionReplicas {
	return v.value
}

func (v *NullableFunctionReplicas) Set(val *FunctionReplicas) {
	v.value = val
	v.isSet = true
}

func (v NullableFunctionReplicas) IsSet() bool {
	return v.isSet
}

func (v *NullableFunctionReplicas) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFunctionReplicas(val *FunctionReplicas) *NullableFunctionReplicas {
	return &NullableFunctionReplicas{value: val, isSet: true}
}

func (v NullableFunctionReplicas) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFunctionReplicas) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


