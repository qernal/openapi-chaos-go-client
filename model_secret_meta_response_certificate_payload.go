/*
Chaos

Central Management API - publicly exposed set of APIs for managing deployments

API version: 1.0.0
Contact: support@qernal.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi-chaos-client

import (
	"encoding/json"
)

// checks if the SecretMetaResponseCertificatePayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SecretMetaResponseCertificatePayload{}

// SecretMetaResponseCertificatePayload Secret metadata certificate payload
type SecretMetaResponseCertificatePayload struct {
	// Public SSL certificate
	Certificate string `json:"certificate"`
}

// NewSecretMetaResponseCertificatePayload instantiates a new SecretMetaResponseCertificatePayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecretMetaResponseCertificatePayload(certificate string) *SecretMetaResponseCertificatePayload {
	this := SecretMetaResponseCertificatePayload{}
	this.Certificate = certificate
	return &this
}

// NewSecretMetaResponseCertificatePayloadWithDefaults instantiates a new SecretMetaResponseCertificatePayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecretMetaResponseCertificatePayloadWithDefaults() *SecretMetaResponseCertificatePayload {
	this := SecretMetaResponseCertificatePayload{}
	return &this
}

// GetCertificate returns the Certificate field value
func (o *SecretMetaResponseCertificatePayload) GetCertificate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Certificate
}

// GetCertificateOk returns a tuple with the Certificate field value
// and a boolean to check if the value has been set.
func (o *SecretMetaResponseCertificatePayload) GetCertificateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Certificate, true
}

// SetCertificate sets field value
func (o *SecretMetaResponseCertificatePayload) SetCertificate(v string) {
	o.Certificate = v
}

func (o SecretMetaResponseCertificatePayload) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SecretMetaResponseCertificatePayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["certificate"] = o.Certificate
	return toSerialize, nil
}

type NullableSecretMetaResponseCertificatePayload struct {
	value *SecretMetaResponseCertificatePayload
	isSet bool
}

func (v NullableSecretMetaResponseCertificatePayload) Get() *SecretMetaResponseCertificatePayload {
	return v.value
}

func (v *NullableSecretMetaResponseCertificatePayload) Set(val *SecretMetaResponseCertificatePayload) {
	v.value = val
	v.isSet = true
}

func (v NullableSecretMetaResponseCertificatePayload) IsSet() bool {
	return v.isSet
}

func (v *NullableSecretMetaResponseCertificatePayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecretMetaResponseCertificatePayload(val *SecretMetaResponseCertificatePayload) *NullableSecretMetaResponseCertificatePayload {
	return &NullableSecretMetaResponseCertificatePayload{value: val, isSet: true}
}

func (v NullableSecretMetaResponseCertificatePayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecretMetaResponseCertificatePayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


