/*
Chaos

Central Management API - publicly exposed set of APIs for managing deployments

API version: 1.0.0
Contact: support@qernal.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi-chaos-client

import (
	"encoding/json"
)

// checks if the ListOrganisationResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListOrganisationResponse{}

// ListOrganisationResponse List organisations schema
type ListOrganisationResponse struct {
	Meta *PaginationMeta `json:"meta,omitempty"`
	Data []OrganisationResponse `json:"data,omitempty"`
}

// NewListOrganisationResponse instantiates a new ListOrganisationResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListOrganisationResponse() *ListOrganisationResponse {
	this := ListOrganisationResponse{}
	return &this
}

// NewListOrganisationResponseWithDefaults instantiates a new ListOrganisationResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListOrganisationResponseWithDefaults() *ListOrganisationResponse {
	this := ListOrganisationResponse{}
	return &this
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *ListOrganisationResponse) GetMeta() PaginationMeta {
	if o == nil || IsNil(o.Meta) {
		var ret PaginationMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListOrganisationResponse) GetMetaOk() (*PaginationMeta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *ListOrganisationResponse) HasMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given PaginationMeta and assigns it to the Meta field.
func (o *ListOrganisationResponse) SetMeta(v PaginationMeta) {
	o.Meta = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *ListOrganisationResponse) GetData() []OrganisationResponse {
	if o == nil || IsNil(o.Data) {
		var ret []OrganisationResponse
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListOrganisationResponse) GetDataOk() ([]OrganisationResponse, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *ListOrganisationResponse) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given []OrganisationResponse and assigns it to the Data field.
func (o *ListOrganisationResponse) SetData(v []OrganisationResponse) {
	o.Data = v
}

func (o ListOrganisationResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListOrganisationResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	return toSerialize, nil
}

type NullableListOrganisationResponse struct {
	value *ListOrganisationResponse
	isSet bool
}

func (v NullableListOrganisationResponse) Get() *ListOrganisationResponse {
	return v.value
}

func (v *NullableListOrganisationResponse) Set(val *ListOrganisationResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListOrganisationResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListOrganisationResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListOrganisationResponse(val *ListOrganisationResponse) *NullableListOrganisationResponse {
	return &NullableListOrganisationResponse{value: val, isSet: true}
}

func (v NullableListOrganisationResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListOrganisationResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


