/*
Chaos

Testing QuotasAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package openapi_chaos_client

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/qernal/openapi-chaos-go-client"
)

func Test_openapi_chaos_client_QuotasAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test QuotasAPIService OrganisationsQuotasGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var organisationId string
		var quotaEntityQuota string

		resp, httpRes, err := apiClient.QuotasAPI.OrganisationsQuotasGet(context.Background(), organisationId, quotaEntityQuota).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test QuotasAPIService OrganisationsQuotasList", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var organisationId string

		resp, httpRes, err := apiClient.QuotasAPI.OrganisationsQuotasList(context.Background(), organisationId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test QuotasAPIService ProjectsQuotasGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var projectId string
		var quotaEntityQuota string

		resp, httpRes, err := apiClient.QuotasAPI.ProjectsQuotasGet(context.Background(), projectId, quotaEntityQuota).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test QuotasAPIService ProjectsQuotasList", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var projectId string

		resp, httpRes, err := apiClient.QuotasAPI.ProjectsQuotasList(context.Background(), projectId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test QuotasAPIService UsersQuotasGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var userId string
		var quotaEntityQuota string

		resp, httpRes, err := apiClient.QuotasAPI.UsersQuotasGet(context.Background(), userId, quotaEntityQuota).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test QuotasAPIService UsersQuotasList", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var userId string

		resp, httpRes, err := apiClient.QuotasAPI.UsersQuotasList(context.Background(), userId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
