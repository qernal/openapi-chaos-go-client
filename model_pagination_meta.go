/*
Chaos

Central Management API - publicly exposed set of APIs for cloud resources

API version: 1.0.0
Contact: help@qernal.support
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_chaos_client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PaginationMeta type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaginationMeta{}

// PaginationMeta Meta object for pagination use
type PaginationMeta struct {
	Results int32 `json:"results"`
	Start int32 `json:"start"`
	End int32 `json:"end"`
	Pages int32 `json:"pages"`
	Links PaginationLinks `json:"links"`
}

type _PaginationMeta PaginationMeta

// NewPaginationMeta instantiates a new PaginationMeta object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaginationMeta(results int32, start int32, end int32, pages int32, links PaginationLinks) *PaginationMeta {
	this := PaginationMeta{}
	this.Results = results
	this.Start = start
	this.End = end
	this.Pages = pages
	this.Links = links
	return &this
}

// NewPaginationMetaWithDefaults instantiates a new PaginationMeta object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaginationMetaWithDefaults() *PaginationMeta {
	this := PaginationMeta{}
	return &this
}

// GetResults returns the Results field value
func (o *PaginationMeta) GetResults() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Results
}

// GetResultsOk returns a tuple with the Results field value
// and a boolean to check if the value has been set.
func (o *PaginationMeta) GetResultsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Results, true
}

// SetResults sets field value
func (o *PaginationMeta) SetResults(v int32) {
	o.Results = v
}

// GetStart returns the Start field value
func (o *PaginationMeta) GetStart() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Start
}

// GetStartOk returns a tuple with the Start field value
// and a boolean to check if the value has been set.
func (o *PaginationMeta) GetStartOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Start, true
}

// SetStart sets field value
func (o *PaginationMeta) SetStart(v int32) {
	o.Start = v
}

// GetEnd returns the End field value
func (o *PaginationMeta) GetEnd() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.End
}

// GetEndOk returns a tuple with the End field value
// and a boolean to check if the value has been set.
func (o *PaginationMeta) GetEndOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.End, true
}

// SetEnd sets field value
func (o *PaginationMeta) SetEnd(v int32) {
	o.End = v
}

// GetPages returns the Pages field value
func (o *PaginationMeta) GetPages() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Pages
}

// GetPagesOk returns a tuple with the Pages field value
// and a boolean to check if the value has been set.
func (o *PaginationMeta) GetPagesOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Pages, true
}

// SetPages sets field value
func (o *PaginationMeta) SetPages(v int32) {
	o.Pages = v
}

// GetLinks returns the Links field value
func (o *PaginationMeta) GetLinks() PaginationLinks {
	if o == nil {
		var ret PaginationLinks
		return ret
	}

	return o.Links
}

// GetLinksOk returns a tuple with the Links field value
// and a boolean to check if the value has been set.
func (o *PaginationMeta) GetLinksOk() (*PaginationLinks, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Links, true
}

// SetLinks sets field value
func (o *PaginationMeta) SetLinks(v PaginationLinks) {
	o.Links = v
}

func (o PaginationMeta) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaginationMeta) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["results"] = o.Results
	toSerialize["start"] = o.Start
	toSerialize["end"] = o.End
	toSerialize["pages"] = o.Pages
	toSerialize["links"] = o.Links
	return toSerialize, nil
}

func (o *PaginationMeta) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"results",
		"start",
		"end",
		"pages",
		"links",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPaginationMeta := _PaginationMeta{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPaginationMeta)

	if err != nil {
		return err
	}

	*o = PaginationMeta(varPaginationMeta)

	return err
}

type NullablePaginationMeta struct {
	value *PaginationMeta
	isSet bool
}

func (v NullablePaginationMeta) Get() *PaginationMeta {
	return v.value
}

func (v *NullablePaginationMeta) Set(val *PaginationMeta) {
	v.value = val
	v.isSet = true
}

func (v NullablePaginationMeta) IsSet() bool {
	return v.isSet
}

func (v *NullablePaginationMeta) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaginationMeta(val *PaginationMeta) *NullablePaginationMeta {
	return &NullablePaginationMeta{value: val, isSet: true}
}

func (v NullablePaginationMeta) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaginationMeta) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


