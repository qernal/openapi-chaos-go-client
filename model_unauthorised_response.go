/*
Chaos

Central Management API - publicly exposed set of APIs for managing deployments

API version: 1.0.0
Contact: support@qernal.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_chaos_client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the UnauthorisedResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UnauthorisedResponse{}

// UnauthorisedResponse Unauthorised
type UnauthorisedResponse struct {
	Message string `json:"message"`
}

type _UnauthorisedResponse UnauthorisedResponse

// NewUnauthorisedResponse instantiates a new UnauthorisedResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnauthorisedResponse(message string) *UnauthorisedResponse {
	this := UnauthorisedResponse{}
	this.Message = message
	return &this
}

// NewUnauthorisedResponseWithDefaults instantiates a new UnauthorisedResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnauthorisedResponseWithDefaults() *UnauthorisedResponse {
	this := UnauthorisedResponse{}
	return &this
}

// GetMessage returns the Message field value
func (o *UnauthorisedResponse) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *UnauthorisedResponse) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *UnauthorisedResponse) SetMessage(v string) {
	o.Message = v
}

func (o UnauthorisedResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UnauthorisedResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["message"] = o.Message
	return toSerialize, nil
}

func (o *UnauthorisedResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"message",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUnauthorisedResponse := _UnauthorisedResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUnauthorisedResponse)

	if err != nil {
		return err
	}

	*o = UnauthorisedResponse(varUnauthorisedResponse)

	return err
}

type NullableUnauthorisedResponse struct {
	value *UnauthorisedResponse
	isSet bool
}

func (v NullableUnauthorisedResponse) Get() *UnauthorisedResponse {
	return v.value
}

func (v *NullableUnauthorisedResponse) Set(val *UnauthorisedResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableUnauthorisedResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableUnauthorisedResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnauthorisedResponse(val *UnauthorisedResponse) *NullableUnauthorisedResponse {
	return &NullableUnauthorisedResponse{value: val, isSet: true}
}

func (v NullableUnauthorisedResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnauthorisedResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


