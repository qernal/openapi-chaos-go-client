/*
Chaos

Central Management API - publicly exposed set of APIs for cloud resources

API version: 1.0.0
Contact: help@qernal.support
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_chaos_client

import (
	"encoding/json"
)

// checks if the MetricResourceAggregation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MetricResourceAggregation{}

// MetricResourceAggregation Metric resource aggregation
type MetricResourceAggregation struct {
	Resources *MetricResourceAggregationResources `json:"resources,omitempty"`
}

// NewMetricResourceAggregation instantiates a new MetricResourceAggregation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetricResourceAggregation() *MetricResourceAggregation {
	this := MetricResourceAggregation{}
	return &this
}

// NewMetricResourceAggregationWithDefaults instantiates a new MetricResourceAggregation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetricResourceAggregationWithDefaults() *MetricResourceAggregation {
	this := MetricResourceAggregation{}
	return &this
}

// GetResources returns the Resources field value if set, zero value otherwise.
func (o *MetricResourceAggregation) GetResources() MetricResourceAggregationResources {
	if o == nil || IsNil(o.Resources) {
		var ret MetricResourceAggregationResources
		return ret
	}
	return *o.Resources
}

// GetResourcesOk returns a tuple with the Resources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricResourceAggregation) GetResourcesOk() (*MetricResourceAggregationResources, bool) {
	if o == nil || IsNil(o.Resources) {
		return nil, false
	}
	return o.Resources, true
}

// HasResources returns a boolean if a field has been set.
func (o *MetricResourceAggregation) HasResources() bool {
	if o != nil && !IsNil(o.Resources) {
		return true
	}

	return false
}

// SetResources gets a reference to the given MetricResourceAggregationResources and assigns it to the Resources field.
func (o *MetricResourceAggregation) SetResources(v MetricResourceAggregationResources) {
	o.Resources = &v
}

func (o MetricResourceAggregation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MetricResourceAggregation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Resources) {
		toSerialize["resources"] = o.Resources
	}
	return toSerialize, nil
}

type NullableMetricResourceAggregation struct {
	value *MetricResourceAggregation
	isSet bool
}

func (v NullableMetricResourceAggregation) Get() *MetricResourceAggregation {
	return v.value
}

func (v *NullableMetricResourceAggregation) Set(val *MetricResourceAggregation) {
	v.value = val
	v.isSet = true
}

func (v NullableMetricResourceAggregation) IsSet() bool {
	return v.isSet
}

func (v *NullableMetricResourceAggregation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetricResourceAggregation(val *MetricResourceAggregation) *NullableMetricResourceAggregation {
	return &NullableMetricResourceAggregation{value: val, isSet: true}
}

func (v NullableMetricResourceAggregation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetricResourceAggregation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


